extends layout/layout.pug

//- .hero
//-   div(class="hero__heading") RDMKIT

block content
  main(class="main__column")
    hgroup
      h2(class="main__heading") RDM
      h3(class="main__subhead") Install the script that will resize the height of any element on the page to the nearest multiple of the baseline. 

    p <code class="language-bash">npm install rdmkit-rdm --save</code>
    p This will install RDM as a dependency.

    p Now import this along with your frontend code and call the rdm funtion with any selector you would like.
    pre.language-js
      code.
        import rdm from "rdmkit-rdm";
        // Pass in any DOM selector
        rdm("figure");

        // you can also select multiple types of items in the DOM like this
        rdm("figure, div.boxes, [rel='hero']");

    p You will need to specify a <code class="language-css">line-height</code> and <code class="language-css">font-size</code> on the <code class="language-css">:root</code> selector in order for this to work. This grid is configured to work on a site that is correctly configured for good typography.

    pre.language-css
      code.
        :root {
          line-height: 1.5;
          font-size: 20px;
        }

    h3(class="main__subbold") Usage
    p When the page loads, all elements passed into the <code class="language-js">rdm();</code> function will be resized to a height closest to a multiple of the baseline unit. This function will also be fired off again on a resize event. This function is debounced, so it wont fire until the user stops resizing the window.

    p Again, setting type online to a strict baseline rhythm is tough. If you do manage to massage all of your type in to a perfect baseline rhythm, then images and responsive challenges will end up throwing all of your baseline efforts away. <code class="language-js">rdm();</code> takes care of that.


  script(src="../internal.js")