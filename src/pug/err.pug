extends layout/layout.pug

block meta
  title RDMKIT | ERR
  meta(name="description" content="Errors you might encounter while attempting to follow a strict baseline grid")

block content
  main(class="main__column")
    hgroup
      h2(class="main__heading") ERRors
      h3(class="main__subhead") Fixing your baseline grid

    p Using a baseline grid for text only is pretty easy. But once you venture into images, videos, textareas and some other elemens, you will need a little css to keep everything lined up.

    h3(class="main__subbold") Responsive iframe, textarea, canvas, and svg
    p The best way to handle <code class="language-html">iframe</code> <code class="language-html">textarea</code> <code class="language-html">canvas</code> <code class="language-html">svg</code> (or any other challenging element) responsively is to give them a width of 100% and then wrap them inside a parent element to be resized with RDM. Example below: 

    h3(class="main__subbold") HTML
    - var s1 = "<div class='resize'>\n\t<iframe></iframe>\n</div>"
    pre.language-html
      code.
        #{s1}

    h3(class="main__subbold") CSS
    pre.language-css
      code.
        .resize iframe,
        .resize textarea,
        .resize canvas,
        .resize svg {
          width: 100%;
        }
    
    h3(class="main__subbold") JS
    pre.language-js
      code.
        import rdm from "rdmkit-rdm";
        rdm(".resize");

    p This is all we need to handle these elements. 

    p Notice how I'm not directly resizing the problem element. Rather, I am resizing the wrapper element holding the problem element. When elements like images, iframes, textareas and svgs are set to a width of 100%, they auto-scale to fit their parent's width. As a result, if we resize the height of the parent, these images, iframes, textareas and svgs will scale to fit perfectly inside their parent.

    p Also never set <code class="language-html">cols</code> on a textarea if you want them to be responsive. You can set <code class="language-html">rows</code>.

    h3(class="main__subbold") Textarea
    - var s2 = "<div class='resize'>\n\t<textarea rows=3 placeholder='Text here...'></textarea>\n</div>"
    pre.language-html
      code.
        #{s2}

    h3(class="main__subbold") Images
    p I never use images without putting them inside a <code class="language-html">figure</code> tag. You are free to use a <code class="language-html">div</code> as well.

    - var s = "<figure class='resize'>\n\t<img src='' alt='' />\n</figure>"
    pre.language-html
      code.
        #{s}

    p Then I style it like this:

    pre.language-css
      code.
        .resize img {
          width: 100%;
          object-fit: cover;
          object-position: 50% 50%;
        }
    
    p I do this because I want to use <code class="language-css">object-fit: cover;</code> on the images. This way I can have the <code class="language-html">figure</code> resize any way I want, and the <code class="language-css">img</code> will always stretch proportionately to cover it.

    h3(class="main__subbold") Background Images
    p Elements with a background image need to be set to <code class="language-css">display: grid;</code> and given a <code class="language-css">grid-template-rows</code> height. Otherwise, the resizing wont work correctly.

    pre.language-css
      code.
        .feature {
          background-image: url("coolness.jpg");
          background-position: center;
          background-size: cover;
          display: grid;
          grid-template-columns: 1fr;
          grid-template-rows: 50vh;
        }

    hgroup
      h2(class="main__heading") Watch out
      h3(class="main__subhead") for these elements

    p Here is a list of things to watch out for to prevent unwanted heights from disrupting your baseline rhythm.

    h3(class="main__subbold") Fonts
    p Believe it or not, different fonts have different settings. Sometimes the various fonts you use can throw off your text-box heights by a pixel or so. The solution is simply to find a font that doesn't do that. For example, Roboto Condensed adds 1px to the height of the text-box when placed next to Roboto Slab in the same line. Go figure?

    h3(class="main__subbold") Borders
    p Borders effect layout height.  Use <code class="language-css">outline</code> or <code class="language-css">box-shadow</code> instead.

    h3(class="main__subbold") Buttons
    p Buttons have default borders and font-sizes. These need to be reset.

    h3(class="main__subbold") Not using box-sizing
    p Use it to make the box-model behave as expected. Read more <a href="https://www.paulirish.com/2012/box-sizing-border-box-ftw/">here</a>.

    h3(class="main__subbold") Margin-collapsing
    p This isn't bad, it's just something to understand. Sometimes padding is a better option.

    h3(class="main__subbold") Sup/Sub
    p These elements effect layout too. Reset these.

    h3(class="main__subbold") Tables
    p Table borders effect layout. Use outline instead.

    hgroup
      h2(class="main__heading") Keep it simple
      h3(class="main__subhead") for everyone

    p Using a crap ton of differing font-sizes and line-heights is going to kill the maintainability of your site. Strive to keep it as straight forward as possible. That's it! Stay awesome!

    hgroup
      h2(class="main__heading") Issues?
      h3(class="main__subhead") Did you run into any issues with RDMKIT tools?

    p Here's a link to Report <a href="https://github.com/brownerd/rdmkit-site/issues">issues and questions</a>.

    
  script(src="../internal.js")